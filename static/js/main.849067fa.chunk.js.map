{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","Transition","React","forwardRef","props","ref","Slide","direction","App","useState","course","setCourse","dourse","setDourse","units","setUnits","title","setTitle","moment","toDate","startDateState","setStartDate","endDate","setEndDate","token","setToken","login","setLogin","edxToken","setEdxToken","setUsers","userEmails","setUserEmails","joinUrl","setJoinUrl","description","setDescription","open","setOpen","loginRef","createRef","courses","setCourses","useEffect","arr","Axios","post","qs","grant_type","client_id","client_secret","token_type","headers","then","response","data","access_token","error","e","get","results","clearFields","window","location","reload","className","onClick","variant","color","style","margin","clientId","authCallback","err","authResponseWithAccessToken","accessToken","account","idToken","redirectUri","graphScopes","toString","id","value","copy","map","item","emailAddress","name","Dialog","TransitionComponent","keepMounted","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","TextField","type","label","onChange","event","target","inputStyle","padding","backgroundColor","borderRadius","borderWidth","borderColor","utils","MomentUtils","DateTimePicker","date","disablePast","width","minDate","alignContent","Autocomplete","options","getOptionLabel","option","alignSelf","newValue","unitBlocks","usernameslist","usernames","course_id","Authorization","undefined","usersResponse","forEach","index","push","user","length","responseEmails","tempArr","address","email","depth","username","block_types_filter","blocks","unis","i","renderInput","params","display_name","onInputChange","syear","getFullYear","smonth","getMonth","padStart","sday","getDate","shours","getHours","sminutes","getMinutes","eyear","emonth","eday","ehours","eminutes","subject","body","contentType","content","start","dateTime","timeZone","end","displayName","attendees","isOnlineMeeting","onlineMeetingProvider","console","log","onlineMeeting","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.849067fa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React, { useState, useEffect } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport Axios from 'axios';\r\nimport { MuiPickersUtilsProvider,DateTimePicker, KeyboardDateTimePicker } from '@material-ui/pickers';\r\nimport {Autocomplete} from '@material-ui/lab'\r\nimport MomentUtils from '@date-io/moment';\r\nimport moment from 'moment';\r\nimport { TextField,CardHeader } from '@material-ui/core';\r\nimport MicrosoftLogin from 'react-microsoft-login';\r\nimport * as qs from 'querystring';\r\nimport {SecondaryButton, PrimaryButton, TextArea, PanelHeader } from 'msteams-ui-components-react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport copy from 'copy-to-clipboard';\r\nimport { join } from 'path';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nfunction App() {\r\n  const [date,setDate]=useState(1);\r\n  const [course,setCourse]=useState('');\r\n  const [dourse,setDourse]=useState('');\r\n  const [units,setUnits]=useState([]);\r\n  const [title,setTitle]=useState('');\r\n  const [startDateState,setStartDate]=useState(moment().toDate());\r\n  const [endDate,setEndDate]=useState(moment().toDate())\r\n  const [token,setToken]=useState('');\r\n  const [login,setLogin]=useState(0);\r\n  const [edxToken,setEdxToken]=useState('');\r\n  const [users,setUsers]=useState([0]);\r\n  const [userEmails,setUserEmails]=useState([0]);\r\n  const [joinUrl,setJoinUrl]=useState('');\r\n  const [description,setDescription]=useState('');\r\n  const [open,setOpen]=useState(false);\r\n  var linkRef= React.createRef();\r\n  var a,b,c,d;\r\n  var loginRef=React.createRef();\r\n  const [courses,setCourses]=useState(['']);\r\n  //var token='eyJ0eXAiOiJKV1QiLCJub25jZSI6Ii1lenZEMVcteW9OT1JlOEhiT2VnaVNtM0JFWk52RVN4UkxPXzQ2MlFmOUkiLCJhbGciOiJSUzI1NiIsIng1dCI6ImppYk5ia0ZTU2JteFBZck45Q0ZxUms0SzRndyIsImtpZCI6ImppYk5ia0ZTU2JteFBZck45Q0ZxUms0SzRndyJ9.eyJhdWQiOiIwMDAwMDAwMy0wMDAwLTAwMDAtYzAwMC0wMDAwMDAwMDAwMDAiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC82ZjM2NDRlOC03YjcxLTQ3OTgtODA5MS00MGZhOWU4MDQ4ZDYvIiwiaWF0IjoxNTk5NzQ2NTA2LCJuYmYiOjE1OTk3NDY1MDYsImV4cCI6MTU5OTc1MDQwNiwiYWNjdCI6MCwiYWNyIjoiMSIsImFpbyI6IkFTUUEyLzhRQUFBQS81T2hDcnErUS9EeXF5d2I0YzJ5VWRpU2FEbWt6TWFyL1RjNGVhSk00UHc9IiwiYW1yIjpbInB3ZCJdLCJhcHBfZGlzcGxheW5hbWUiOiJHcmFwaCBleHBsb3JlciAob2ZmaWNpYWwgc2l0ZSkiLCJhcHBpZCI6ImRlOGJjOGI1LWQ5ZjktNDhiMS1hOGFkLWI3NDhkYTcyNTA2NCIsImFwcGlkYWNyIjoiMCIsImdpdmVuX25hbWUiOiJMYXhtaSIsImlkdHlwIjoidXNlciIsImlwYWRkciI6IjEwNi41MS4yNDMuMzYiLCJuYW1lIjoiTGF4bWkiLCJvaWQiOiIyYWIwODNiMi0zYzNkLTQ0NWEtOTcwNC04MzY2NmRmYzg2MTYiLCJwbGF0ZiI6IjE0IiwicHVpZCI6IjEwMDMyMDAwRDI3RjREOEIiLCJyaCI6IjAuQUFBQTZFUTJiM0Y3bUVlQWtVRDZub0JJMXJYSWk5NzUyYkZJcUsyM1NOcHlVR1FZQUlFLiIsInNjcCI6IkNhbGVuZGFycy5SZWFkV3JpdGUgb3BlbmlkIHByb2ZpbGUgVXNlci5SZWFkIGVtYWlsIiwic2lnbmluX3N0YXRlIjpbImttc2kiXSwic3ViIjoiYmN4aTVzZ1VZUFJvai1zdmFTcWtLMWg4MndVX0drSDBjcWxtLWM5Q1ZpSSIsInRlbmFudF9yZWdpb25fc2NvcGUiOiJOQSIsInRpZCI6IjZmMzY0NGU4LTdiNzEtNDc5OC04MDkxLTQwZmE5ZTgwNDhkNiIsInVuaXF1ZV9uYW1lIjoiTGF4bWlAdnRlYW1sYWJzLmNvbSIsInVwbiI6IkxheG1pQHZ0ZWFtbGFicy5jb20iLCJ1dGkiOiJIc2xLbDlJVVAweWIyeXh5aVFFYkFBIiwidmVyIjoiMS4wIiwid2lkcyI6WyJiNzlmYmY0ZC0zZWY5LTQ2ODktODE0My03NmIxOTRlODU1MDkiXSwieG1zX3N0Ijp7InN1YiI6IlVvSkFuQjFIa2EwWFZYT1pZM3pzTmxsZXpzNzJCTUYxancyTzVtMzUwcW8ifSwieG1zX3RjZHQiOjE0NDM0MjA2MDR9.wTRSUxLd6bRGzMt6qrk8MxLxEKwU9GxRa_Hcveqh_2_1XLCzyPRh3uhUP_3JIE6yj5uKCrIXDBmLmwrs5ein7mMFEW7oGLG9HmQ9DPxVW_urq2npfopL9w8mqDOMMOLE5UbjeAI45AWliKpVQ6DO8GmcN-uVY3hsiRfo4c96AV6eYuYefj9M4mbIDXJDVY2K9kG9tWcBlqp_qjli5AUIDjWLI2uRWqDM9fGv1f8F0HWpFDLaSI2_S8KPP3kRQLzxZYJXtkTzs3TBqM4jrL70llj88pcBu4PtbbGzTHY0jdpaV9c_cSJ-3IEzBvOlfrAM2mBPY6pa5AH1Q3tb5Y5BHA';\r\n\r\n  useEffect(()=>{\r\n    var arr=[];\r\n    try{\r\n    Axios.post('https://edxvteam.com/oauth2/access_token',\r\n            qs.stringify(\r\n              {\r\n                grant_type:\"client_credentials\",\r\n                client_id:\"8vD6pKAbjTfgdEtNAKqdUwu0X6Ps574kyBh94Om0\",\r\n                client_secret:\"ERRuuGZPMsEy8hjBHjFaMZsmDR3SRhXndOjgoiqEseor1p18kktkHSdUExFNFoKlTdWrmrtz2Oc0NyVa9fNASLuckPPRJY0uCXwkg7yEbRfUg8e0rfGetaGt7tuqUqRo\",\r\n                token_type:\"Bearer\" \r\n              }\r\n            ),\r\n            {\r\n              headers: {\r\n              'Content-Type': 'application/x-www-form-urlencoded'\r\n            }}).then((response)=>{\r\n              \r\n              \r\n              setEdxToken(response.data.access_token);\r\n            },(error)=>{\r\n              setLogin(69);\r\n              \r\n            })\r\n    }\r\n    catch(e){\r\n      \r\n    }\r\n    if(token == '')\r\n      loginRef.login();\r\n    Axios.get('https://edxvteam.com/api/courses/v1/courses/')\r\n    .then((response)=>{\r\n      arr=response.data.results;\r\n      \r\n      setCourses(arr);\r\n    },(error)=>{\r\n      setLogin(error);\r\n      \r\n    })\r\n    \r\n  },[]);\r\n\r\n  const addEvent=()=>{\r\n\r\n    const syear  = startDateState.getFullYear();\r\n    const smonth = (startDateState.getMonth() + 1).toString().padStart(2, \"0\");\r\n    const sday   = startDateState.getDate().toString().padStart(2, \"0\");\r\n    const shours= startDateState.getHours().toString().padStart(2,\"0\");\r\n    const sminutes= startDateState.getMinutes().toString().padStart(2,\"0\")\r\n    const eyear  = endDate.getFullYear();\r\n    const emonth = (endDate.getMonth() + 1).toString().padStart(2, \"0\");\r\n    const eday   = endDate.getDate().toString().padStart(2, \"0\");\r\n    const ehours= endDate.getHours().toString().padStart(2,\"0\");\r\n    const eminutes= endDate.getMinutes().toString().padStart(2,\"0\")\r\n    //alert(`${startDateState.getFullYear()}-${startDateState.getMonth()}-${startDateState.getDate()}T${startDateState.getHours()}:${startDateState.getMinutes()}:00${endDate.getFullYear()}-${endDate.getMonth()}-${endDate.getDate()}T${endDate.getHours()}:${endDate.getMinutes()}:00`)\r\n    //getEmails\r\n    //Axios.post\r\n    //Add to calendar with emails\r\n    Axios.post('https://graph.microsoft.com/v1.0/groups/48c4a928-f625-4837-90cc-4181c8b9191c/events'\r\n            ,\r\n            {\r\n              subject: title,\r\n              body: {\r\n                contentType: \"HTML\",\r\n                content: course+' '+dourse+'\\n'+description\r\n              },\r\n              start: {\r\n                  dateTime: `${syear}-${smonth}-${sday}T${shours}:${sminutes}:00`,\r\n                  timeZone: \"India Standard Time\"\r\n              },\r\n              end: {\r\n                  dateTime: `${eyear}-${emonth}-${eday}T${ehours}:${eminutes}:00`,\r\n                  timeZone: \"India Standard Time\"\r\n              },\r\n              location:{\r\n                  displayName:\"Microsoft team\"\r\n              },\r\n              attendees: userEmails,\r\n              isOnlineMeeting: true,\r\n              onlineMeetingProvider: \"teamsForBusiness\"\r\n            },\r\n            {\r\n              headers: { Authorization: `Bearer ${token}` }\r\n          }).then((response)=>{\r\n            console.log(response);\r\n            setJoinUrl(response.data.onlineMeeting.joinUrl);\r\n            setLogin(3);\r\n            \r\n          },(error)=>{\r\n            console.log(error);\r\n            setLogin(69);\r\n            \r\n          })\r\n          //alert(`${startDateState.getFullYear()}-${startDateState.getMonth()}-${startDateState.getDate()}T${startDateState.getHours()}:${startDateState.getMinutes()}:00${endDate.getFullYear()}-${endDate.getMonth()}-${endDate.getDate()}T${endDate.getHours()}:${endDate.getMinutes()}:00`)\r\n\r\n  }\r\n  \r\n   \r\n  const clicky=(event)=>{\r\n    a=event.target.value;\r\n    } \r\n\r\n  const authHandler=(err,data)=>{\r\n    try{\r\n      const {accessToken,account,idToken}= data.authResponseWithAccessToken;\r\n      \r\n      if(accessToken!=null){\r\n        setToken(accessToken);\r\n        setLogin(1);\r\n      }\r\n    }\r\n    catch(e){\r\n      \r\n    }\r\n  }\r\n\r\n  const courseChanged=(event,newValue)=>{\r\n    var unitBlocks={};\r\n   // \r\n    \r\n    setCourse(newValue.name);\r\n    \r\n    var usernameslist='';\r\n    var usernames=['satishag','satishag87'];\r\n    \r\n    //parallely\r\n    Axios.get('https://edxvteam.com/api/enrollment/v1/enrollments?'+qs.stringify({course_id: newValue.course_id}),{\r\n      headers:{\r\n        Authorization: `Bearer ${edxToken}`\r\n      }\r\n    }).then((response)=>{\r\n      \r\n      if(response.data.results!=undefined){\r\n        setUsers(response.data.results);\r\n        var usersResponse = response.data.results;\r\n        usernames= [];\r\n        usersResponse.forEach((item,index,usersResponse)=>{\r\n          usernames.push(item.user);\r\n        })\r\n        \r\n        usernameslist= '';\r\n        usernames.forEach((item,index,arr)=>{\r\n          if(index<usernames.length-1)\r\n            usernameslist=usernameslist+item+',';\r\n          else\r\n            usernameslist=usernameslist+item;\r\n        });\r\n        \r\n        Axios.get('https://edxvteam.com/api/user/v1/accounts?username='+usernameslist,\r\n        {\r\n          headers:{\r\n          Authorization:`Bearer ${edxToken}`\r\n        }\r\n        }).then((response)=>{\r\n          var responseEmails= response.data;\r\n          var tempArr=[];\r\n          responseEmails.forEach((item,index,responseEmails)=>{\r\n            tempArr.push( {\r\n              emailAddress: {\r\n                address: item.email,\r\n                name: item.name\r\n              },\r\n              type: \"required\"\r\n            });\r\n          });\r\n          tempArr.push( {\r\n            emailAddress: {\r\n              address: 'ghouse.khasim1@gmail.com',\r\n              name: 'Ghouse Khasim'\r\n            },\r\n            type: \"required\"\r\n          });\r\n          setUserEmails(tempArr);\r\n        },(error)=>{\r\n          setLogin(69);\r\n          \r\n        })\r\n\r\n      }\r\n    },(error)=>{\r\n      \r\n    });\r\n    //parallely\r\n    Axios.get('https://edxvteam.com/api/courses/v1/blocks/?'+qs.stringify({course_id: newValue.course_id,\r\n    depth: 'all',\r\n    username: 'satishag',\r\n    block_types_filter: 'discussion'\r\n    }),{\r\n      headers:{\r\n        Authorization: `Bearer ${edxToken}`\r\n      }\r\n    }).then((response)=>{\r\n      \r\n      if(response.data.blocks != undefined){\r\n        var unis=[];\r\n        unitBlocks= response.data.blocks;\r\n        for(var i in unitBlocks){\r\n          \r\n          unis.push(unitBlocks[i]);\r\n        }\r\n        setUnits(unis);\r\n        \r\n\r\n          \r\n        \r\n\r\n      }\r\n    },(error)=>{\r\n      setLogin(69);\r\n      \r\n    });\r\n    usernames.forEach((item,index,arr)=>{\r\n      if(index<usernames.length-1)\r\n        usernameslist=usernameslist+item+',';\r\n      else\r\n        usernameslist=usernameslist+item;\r\n    });\r\n    var course_id=newValue.course_id;\r\n    \r\n    /*Axios.get('https://edxvteam.com/api/user/v1/accounts/',\r\n    qs.stringify({\r\n      username: ['satishag','satishag87']\r\n    }),\r\n    {\r\n      headers:{\r\n      Authorization:`Bearer ${edxToken}`\r\n    }\r\n    }).then((response)=>\r\n   /* Axios.get('https://edxvteam.com/api/courses/v1/blocks/'+\r\n    qs.stringify({\r\n      course_id: course_id,\r\n      depth: 'all',\r\n      username: 'satishag',\r\n      block_types_filter: 'discussion'\r\n\r\n    }),{\r\n      headers:{\r\n      Authorization:`Bearer ${edxToken}`\r\n    }\r\n  }).then((response)=>{\r\n      \r\n    })*/\r\n    \r\n\r\n  }\r\n  const clearFields=()=>{\r\n    window.location.reload();\r\n  }\r\n\r\n  if(login==69)\r\n  return( <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <p>500 internal error</p>\r\n      </header>\r\n      <div className=\"Background\">\r\n      <body className=\"Bady\">\r\n        <p className=\"TextTitle abc\">A network error occured, try again </p>\r\n        \r\n        <div className=\"HorizontalDivision\">\r\n\r\n      <PrimaryButton onClick={clearFields} variant='contained' color='primary' style={{margin: 30}} >Try Again</PrimaryButton>\r\n      \r\n       \r\n      </div>\r\n      </body>\r\n      </div>\r\n \r\n    </div>\r\n    )\r\n\r\n  const copyLink=(e)=>{\r\n    copy(joinUrl);\r\n    setOpen(true);\r\n\r\n  }\r\n\r\n\r\n  if(login===0)\r\n    return (<MicrosoftLogin ref={(ref)=>loginRef=ref} clientId={'c4e63d26-dcf1-4d0a-bac1-ae0bc5afca83'} authCallback={authHandler} redirectUri={'https://ghousekhas.github.io/baseform/'} graphScopes={['Calendars.ReadWrite','Group.ReadWrite.All']} />)\r\n\r\n  if(login==3)\r\n    return( <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <p>Class scheduled successfully</p>\r\n      </header>\r\n      <div className=\"Background\">\r\n      <body className=\"Bady\">\r\n        <p className=\"TextTitle abc\">The class for {course} was successfully scheduled from {startDateState.toString()} to {endDate.toString()} at \r\n          </p>\r\n        <a ref={(ref)=>linkRef=ref} id='joinlink' className=\"TextTitle def\" value={joinUrl}\r\n        onClick={copyLink}>{joinUrl}</a>\r\n        <div className=\"ScrollDivision\">\r\n          <p className=\"TextTitle abc\">Following stuents have been invited:</p>\r\n          {\r\n          userEmails.map((item)=>{\r\n            return(\r\n            <p className=\"TextTitle abc\">{item.emailAddress.name}</p>\r\n            )\r\n          })\r\n}\r\n        </div>\r\n        <div className=\"HorizontalDivision\">\r\n\r\n      <PrimaryButton onClick={clearFields} variant='contained' color='primary' style={{margin: 30}} >Schedule another Class</PrimaryButton>\r\n      \r\n       \r\n      </div>\r\n      </body>\r\n      </div>\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">{\"Use Google's location service?\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            The link has been copied to your clipboard\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={()=>setOpen(false)} color=\"primary\">\r\n            Okay\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n \r\n    </div>\r\n    )\r\n  \r\n    return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <p>Schedule a class</p> \r\n      </header>\r\n      <div className=\"Background\">\r\n      <body className=\"Bady\">\r\n      <div className=\"Division\">\r\n        <p className=\"TextTitle\">Meeting Title</p>\r\n        <TextField\r\n            color=\"white\"\r\n            type='text'\r\n            label='Enter the meeting title'\r\n            variant='outlined'\r\n            onChange={(event)=> {\r\n              setTitle(event.target.value);\r\n              b=event.target.value;\r\n            }}\r\n            \r\n            inputStyle={{color: 'white', padding: '0 25px'}}\r\n            style={{ backgroundColor: 'rgba(255,255,255,0.9)', borderRadius: 10000,borderWidth: 5,borderColor: 'black' }}\r\n          />\r\n      </div>\r\n      <div className=\"HorizontalDivision\">\r\n        <div className=\"AnotherDivision\">\r\n          <p className=\"TextTitle\">From</p>\r\n            <MuiPickersUtilsProvider utils={MomentUtils}  >\r\n              <DateTimePicker \r\n              variant='dialog' \r\n              onChange={(date)=>{\r\n                setStartDate(date.toDate())}}\r\n              value={startDateState}\r\n              disablePast\r\n              style={{width: '15vw'}}\r\n              />\r\n            </MuiPickersUtilsProvider>\r\n        </div>\r\n        <div className=\"AnotherDivision\">\r\n          <p className=\"TextTitle\">To</p>\r\n            <MuiPickersUtilsProvider utils={MomentUtils} >\r\n              <DateTimePicker \r\n              variant='dialog' \r\n              minDate={startDateState}\r\n              value={endDate}\r\n              onChange={(date)=>{setEndDate(date.toDate())}}\r\n              style={{width: '15vw',alignContent: 'center'}}\r\n              />\r\n            </MuiPickersUtilsProvider>\r\n        </div>\r\n      </div>\r\n      <div className='Division'>\r\n        <p className=\"TextTitle\">Select the course</p>\r\n          <Autocomplete options={courses}\r\n              getOptionLabel={(option) => option.name}\r\n              style={{width: '100%', margin: 0,alignSelf: 'center' }}\r\n              //onInputChange={courseChanged}\r\n              onChange={courseChanged}\r\n              renderInput={(params) => <TextField {...params} label=\"Select the course\" variant=\"outlined\"   />}/>\r\n           \r\n      </div>\r\n      <div className='Division'>\r\n        <p className=\"TextTitle\">Select the unit</p>\r\n        <Autocomplete options={units}\r\n            getOptionLabel={(option) => option.display_name}\r\n            style={{width: '100%', margin: 0,alignSelf: 'center' }}\r\n            onInputChange={(event,newValue)=>setDourse(newValue)}\r\n            renderInput={(params) => <TextField {...params} label=\"Select course unit\" variant=\"outlined\" />}/>\r\n      </div>\r\n      <div className=\"Division\">\r\n        <p className=\"TextTitle\">Description</p>\r\n        <TextField\r\n            color=\"white\"\r\n            type='text'\r\n            label='Enter additional description'\r\n            variant='outlined'\r\n            onChange={(event)=> {\r\n              setDescription(event.target.value);\r\n              b=event.target.value;\r\n            }}\r\n            \r\n            inputStyle={{color: 'white', padding: '0 25px'}}\r\n            style={{ backgroundColor: 'rgba(255,255,255,0.9)', borderRadius: 10000,borderWidth: 5,borderColor: 'black' }}\r\n          />\r\n      </div>\r\n      <div className=\"HorizontalDivision\">\r\n      <SecondaryButton onClick={clearFields} variant='contained' color='secondary' style={{margin: 30}} >Cancel</SecondaryButton>\r\n      <PrimaryButton onClick={addEvent} variant='contained' color='primary' style={{margin: 30}} >Submit</PrimaryButton>\r\n      \r\n       \r\n      </div>\r\n      \r\n      \r\n      </body>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}