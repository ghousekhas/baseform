{"version":3,"sources":["App.js","serviceWorker.js","index.js","logo.svg"],"names":["top100Films","title","year","App","b","useState","course","setCourse","dourse","setDourse","setTitle","moment","toDate","startDateState","setStartDate","endDate","setEndDate","token","setToken","courses","setCourses","useEffect","arr","Axios","get","then","response","data","results","error","console","log","getFullYear","addEvent","syear","smonth","getMonth","toString","padStart","sday","getDate","shours","getHours","sminutes","getMinutes","eyear","emonth","eday","ehours","eminutes","post","subject","body","contentType","content","start","dateTime","timeZone","end","location","displayName","attendees","emailAddress","address","name","type","headers","Authorization","className","TextField","color","label","variant","onChange","event","target","value","inputStyle","padding","style","backgroundColor","borderRadius","borderWidth","borderColor","utils","MomentUtils","date","disablePast","minDate","Autocomplete","options","getOptionLabel","option","width","margin","alignSelf","onInputChange","newValue","renderInput","params","Button","onClick","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.5c0391cb.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport Axios from 'axios';\r\nimport { MuiPickersUtilsProvider,DateTimePicker, KeyboardDateTimePicker } from '@material-ui/pickers';\r\nimport {Autocomplete} from '@material-ui/lab'\r\nimport MomentUtils from '@date-io/moment';\r\nimport moment from 'moment';\r\nimport { TextField,Button,CardHeader } from '@material-ui/core';\r\n\r\nfunction App() {\r\n  const [date,setDate]=useState(1);\r\n  const [course,setCourse]=useState('');\r\n  const [dourse,setDourse]=useState('');\r\n  const [units,setUnits]=useState('');\r\n  const [title,setTitle]=useState('');\r\n  const [startDateState,setStartDate]=useState(moment().toDate());\r\n  const [endDate,setEndDate]=useState(moment().toDate())\r\n  const [token,setToken]=useState('');\r\n  var a,b,c,d;\r\n  const [courses,setCourses]=useState(['']);\r\n  //var token='eyJ0eXAiOiJKV1QiLCJub25jZSI6Ii1lenZEMVcteW9OT1JlOEhiT2VnaVNtM0JFWk52RVN4UkxPXzQ2MlFmOUkiLCJhbGciOiJSUzI1NiIsIng1dCI6ImppYk5ia0ZTU2JteFBZck45Q0ZxUms0SzRndyIsImtpZCI6ImppYk5ia0ZTU2JteFBZck45Q0ZxUms0SzRndyJ9.eyJhdWQiOiIwMDAwMDAwMy0wMDAwLTAwMDAtYzAwMC0wMDAwMDAwMDAwMDAiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC82ZjM2NDRlOC03YjcxLTQ3OTgtODA5MS00MGZhOWU4MDQ4ZDYvIiwiaWF0IjoxNTk5NzQ2NTA2LCJuYmYiOjE1OTk3NDY1MDYsImV4cCI6MTU5OTc1MDQwNiwiYWNjdCI6MCwiYWNyIjoiMSIsImFpbyI6IkFTUUEyLzhRQUFBQS81T2hDcnErUS9EeXF5d2I0YzJ5VWRpU2FEbWt6TWFyL1RjNGVhSk00UHc9IiwiYW1yIjpbInB3ZCJdLCJhcHBfZGlzcGxheW5hbWUiOiJHcmFwaCBleHBsb3JlciAob2ZmaWNpYWwgc2l0ZSkiLCJhcHBpZCI6ImRlOGJjOGI1LWQ5ZjktNDhiMS1hOGFkLWI3NDhkYTcyNTA2NCIsImFwcGlkYWNyIjoiMCIsImdpdmVuX25hbWUiOiJMYXhtaSIsImlkdHlwIjoidXNlciIsImlwYWRkciI6IjEwNi41MS4yNDMuMzYiLCJuYW1lIjoiTGF4bWkiLCJvaWQiOiIyYWIwODNiMi0zYzNkLTQ0NWEtOTcwNC04MzY2NmRmYzg2MTYiLCJwbGF0ZiI6IjE0IiwicHVpZCI6IjEwMDMyMDAwRDI3RjREOEIiLCJyaCI6IjAuQUFBQTZFUTJiM0Y3bUVlQWtVRDZub0JJMXJYSWk5NzUyYkZJcUsyM1NOcHlVR1FZQUlFLiIsInNjcCI6IkNhbGVuZGFycy5SZWFkV3JpdGUgb3BlbmlkIHByb2ZpbGUgVXNlci5SZWFkIGVtYWlsIiwic2lnbmluX3N0YXRlIjpbImttc2kiXSwic3ViIjoiYmN4aTVzZ1VZUFJvai1zdmFTcWtLMWg4MndVX0drSDBjcWxtLWM5Q1ZpSSIsInRlbmFudF9yZWdpb25fc2NvcGUiOiJOQSIsInRpZCI6IjZmMzY0NGU4LTdiNzEtNDc5OC04MDkxLTQwZmE5ZTgwNDhkNiIsInVuaXF1ZV9uYW1lIjoiTGF4bWlAdnRlYW1sYWJzLmNvbSIsInVwbiI6IkxheG1pQHZ0ZWFtbGFicy5jb20iLCJ1dGkiOiJIc2xLbDlJVVAweWIyeXh5aVFFYkFBIiwidmVyIjoiMS4wIiwid2lkcyI6WyJiNzlmYmY0ZC0zZWY5LTQ2ODktODE0My03NmIxOTRlODU1MDkiXSwieG1zX3N0Ijp7InN1YiI6IlVvSkFuQjFIa2EwWFZYT1pZM3pzTmxsZXpzNzJCTUYxancyTzVtMzUwcW8ifSwieG1zX3RjZHQiOjE0NDM0MjA2MDR9.wTRSUxLd6bRGzMt6qrk8MxLxEKwU9GxRa_Hcveqh_2_1XLCzyPRh3uhUP_3JIE6yj5uKCrIXDBmLmwrs5ein7mMFEW7oGLG9HmQ9DPxVW_urq2npfopL9w8mqDOMMOLE5UbjeAI45AWliKpVQ6DO8GmcN-uVY3hsiRfo4c96AV6eYuYefj9M4mbIDXJDVY2K9kG9tWcBlqp_qjli5AUIDjWLI2uRWqDM9fGv1f8F0HWpFDLaSI2_S8KPP3kRQLzxZYJXtkTzs3TBqM4jrL70llj88pcBu4PtbbGzTHY0jdpaV9c_cSJ-3IEzBvOlfrAM2mBPY6pa5AH1Q3tb5Y5BHA';\r\n\r\n  useEffect(()=>{\r\n    var arr=[];\r\n    Axios.get('https://edxvteam.com/api/courses/v1/courses/')\r\n    .then((response)=>{\r\n      arr=response.data.results;\r\n      setCourses(arr);\r\n    },(error)=>{\r\n      console.log(error);\r\n    })\r\n    console.log(startDateState.getFullYear());\r\n  },[]);\r\n\r\n  const addEvent=()=>{\r\n\r\n    const syear  = startDateState.getFullYear();\r\n    const smonth = (startDateState.getMonth() + 1).toString().padStart(2, \"0\");\r\n    const sday   = startDateState.getDate().toString().padStart(2, \"0\");\r\n    const shours= startDateState.getHours().toString().padStart(2,\"0\");\r\n    const sminutes= startDateState.getMinutes().toString().padStart(2,\"0\")\r\n    const eyear  = endDate.getFullYear();\r\n    const emonth = (endDate.getMonth() + 1).toString().padStart(2, \"0\");\r\n    const eday   = endDate.getDate().toString().padStart(2, \"0\");\r\n    const ehours= endDate.getHours().toString().padStart(2,\"0\");\r\n    const eminutes= endDate.getMinutes().toString().padStart(2,\"0\")\r\n    //alert(`${startDateState.getFullYear()}-${startDateState.getMonth()}-${startDateState.getDate()}T${startDateState.getHours()}:${startDateState.getMinutes()}:00${endDate.getFullYear()}-${endDate.getMonth()}-${endDate.getDate()}T${endDate.getHours()}:${endDate.getMinutes()}:00`)\r\n    Axios.post('https://graph.microsoft.com/v1.0/me/calendars/AAMkAGUxYzhmYWViLTk3Y2MtNGNlOC04OTYyLWEzMDk2ODg5M2M1NgBGAAAAAAD9QiWpkpRiTLHApXmB7B8lBwC2pBhdGQNITo-78bb6qcJDAAAAAAEGAAC2pBhdGQNITo-78bb6qcJDAAAeos5PAAA=/events'\r\n            ,\r\n            {\r\n              subject: title,\r\n              body: {\r\n                contentType: \"HTML\",\r\n                content: course+dourse\r\n              },\r\n              start: {\r\n                  dateTime: `${syear}-${smonth}-${sday}T${shours}:${sminutes}:00`,\r\n                  timeZone: \"India Standard Time\"\r\n              },\r\n              end: {\r\n                  dateTime: `${eyear}-${emonth}-${eday}T${ehours}:${eminutes}:00`,\r\n                  timeZone: \"India Standard Time\"\r\n              },\r\n              location:{\r\n                  displayName:\"Microsoft team\"\r\n              },\r\n              attendees: [\r\n                {\r\n                  emailAddress: {\r\n                    address:\"students@gmail.com\",\r\n                    name: \"student 1\"\r\n                  },\r\n                  type: \"required\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              headers: { Authorization: `Bearer ${token}` }\r\n          }).then((response)=>{\r\n            console.log(response);\r\n          },(error)=>{\r\n            console.log(error);\r\n          })\r\n          //alert(`${startDateState.getFullYear()}-${startDateState.getMonth()}-${startDateState.getDate()}T${startDateState.getHours()}:${startDateState.getMinutes()}:00${endDate.getFullYear()}-${endDate.getMonth()}-${endDate.getDate()}T${endDate.getHours()}:${endDate.getMinutes()}:00`)\r\n\r\n  }\r\n  \r\n   \r\n  const clicky=(event)=>{\r\n    a=event.target.value;\r\n    } \r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <p>Schedule a class</p> \r\n      </header>\r\n      <body className='Bady'>\r\n        \r\n    <div className=\"Form\">\r\n      <div className=\"Division\">\r\n        <p className=\"TextTitle\">Meeting Title</p>\r\n        <TextField\r\n            color=\"white\"\r\n            type='text'\r\n            label='Enter the meeting title'\r\n            variant='outlined'\r\n            onChange={(event)=> {\r\n              setTitle(event.target.value);\r\n              b=event.target.value;\r\n            console.log(b)}}\r\n            inputStyle={{color: 'white', padding: '0 25px'}}\r\n            style={{ backgroundColor: 'rgba(255,255,255,0.9)', borderRadius: 10000,borderWidth: 5,borderColor: 'black' }}\r\n          />\r\n      </div>\r\n      <div className=\"HorizontalDivision\">\r\n        <div className=\"Division\">\r\n          <p className=\"TextTitle\">Start Date</p>\r\n            <MuiPickersUtilsProvider utils={MomentUtils} >\r\n              <KeyboardDateTimePicker \r\n              variant='dialog' \r\n              onChange={(date)=>{console.log(date);\r\n                setStartDate(date.toDate())}}\r\n              value={startDateState}\r\n              disablePast/>\r\n            </MuiPickersUtilsProvider>\r\n        </div>\r\n        <div className=\"Division\">\r\n          <p className=\"TextTitle\">End Date</p>\r\n            <MuiPickersUtilsProvider utils={MomentUtils} >\r\n              <KeyboardDateTimePicker \r\n              variant='dialog' \r\n              minDate={startDateState}\r\n              value={endDate}\r\n              onChange={(date)=>{setEndDate(date.toDate())}}\r\n              />\r\n            </MuiPickersUtilsProvider>\r\n        </div>\r\n      </div>\r\n      <div className='Division'>\r\n        <p className=\"TextTitle\">Select the course</p>\r\n        <Autocomplete options={courses}\r\n            getOptionLabel={(option) => option.name}\r\n            style={{width: '100%', margin: 0,alignSelf: 'center' }}\r\n            onInputChange={(event,newValue)=>{setCourse(newValue)\r\n            }}\r\n            renderInput={(params) => <TextField {...params} label=\"Select the course\" variant=\"outlined\"   />}/>\r\n      </div>\r\n      <div className='Division'>\r\n        <p className=\"TextTitle\">Select the unit</p>\r\n        <Autocomplete options={top100Films}\r\n            getOptionLabel={(option) => option.title}\r\n            style={{width: '100%', margin: 0,alignSelf: 'center' }}\r\n            onInputChange={(event,newValue)=>setDourse(newValue)}\r\n            renderInput={(params) => <TextField {...params} label=\"Select course unit\" variant=\"outlined\" />}/>\r\n      </div>\r\n      <div className='Division'>\r\n        <p className=\"TextTitle\">API KEY</p>\r\n        <TextField onChange={(event)=>{setToken(event.target.value)\r\n        console.log(token)}}\r\n            />\r\n      </div>\r\n      <div className=\"HorizontalDivision\">\r\n      <Button onClick={addEvent} variant='contained' color='secondary' style={{margin: 30}} >Cancel</Button>\r\n       <Button onClick={addEvent} variant='contained' color='primary' style={{margin: 30}} >Submit</Button>\r\n       \r\n      </div>\r\n      \r\n    </div>\r\n      \r\n        </body>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nconst top100Films = [\r\n  { title: 'Unit 1', year: 1994 },\r\n  { title: 'Unit 2', year: 1994 },\r\n  { title: 'Unit 3', year: 1994 },\r\n  { title: 'Unit 4', year: 1994 }\r\n  \r\n];\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";"],"sourceRoot":""}